<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Pr√≥xima Partida da FURIA</title>
  <link rel="stylesheet" href="/style.css"/>
</head>
<body>
  <main class="main-grid">
    <section class="info-section">
      
      <div class="buttons">
        <a href="/"><button>üè† Voltar para In√≠cio</button></a>
      </div>
      <div class="match-card">
        <h2>Pr√≥xima Partida da FURIA</h2>
        <div class="event"><%= match.event %></div>
        <div class="opponent">vs <%= match.opponent %></div>
        <div class="date">
          <%= match.iso_date.toLocaleDateString('pt-BR', {
            weekday: 'long',
            day: '2-digit',
            month: 'long'
          }) %>
        </div>

        <% const matchDate = new Date(match.iso_date); %>
        <% const now = new Date(); %>
        <% const diff = matchDate - now; %>
        <% const showCountdown = diff > 0 && diff <= 604800000; %> <!-- 7 dias -->
        <% if (showCountdown) { %>
          <div class="countdown" id="countdown">‚è≥ Carregando contagem regressiva...</div>
        <% } %>
      </div>

      <div class="buttons">
        <a id="chatLink" href="/furia-live">
            <button id="chatButton" disabled>üí¨ Chat da partida dispon√≠vel durante a partida</button>
        </a>
      </div>
      
    </section>

    <section class="chat-section">
      <h2>Chat Geral</h2>
      <div id="chat-box" class="chat-box">
        <% messages.forEach(msg => { %>
          <div><strong><%= msg.username %>:</strong> <%= msg.text %></div>
        <% }) %>
      </div>

      <% if (username) { %>
        <form id="chat-form" class="chat-form" autocomplete="off">
          <input id="chat-input" type="text" placeholder="Mensagem..." required autocomplete="off" />
        </form>
      <% } else { %>
        <p class="login-notice">Voc√™ precisa estar logado para enviar mensagens.</p>
      <% } %>
    </section>
  </main>
  
  <% if (showCountdown) { %>
    <script>
      const targetDate = new Date("<%= match.iso_date %>").getTime();
      const countdownEl = document.getElementById('countdown');
      const chatButton = document.getElementById('chatButton');
      const chatLink = document.getElementById('chatLink');

      const updateCountdown = () => {
        const now = new Date().getTime();
        const distance = targetDate - now;

        if (distance <= 0) {
          countdownEl.textContent = "üö® A partida j√° come√ßou!";
          chatButton.disabled = false;
          chatButton.textContent = "üí¨ Ir para o Chat ao Vivo";
          return;
        }

        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        const dayText = days > 0 ? `${days}d ` : '';
        countdownEl.textContent = `‚è≥ Come√ßa em ${dayText}${hours}h ${minutes}min ${seconds}s`;
      };

      updateCountdown();
      setInterval(updateCountdown, 1000);
    </script>
  <% } %>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    const username = "<%= username %>";
    const matchId = "general";

    socket.emit('joinRoom', matchId);

    document.querySelector('#chat-form').addEventListener('submit', function(e) {
      e.preventDefault();
      const text = document.querySelector('#chat-input').value;
      if (text.trim()) {
        socket.emit('sendMessage', { username, text, matchId });
        document.querySelector('#chat-input').value = '';
      }
    });

    socket.on('newMessage', msg => {
      const chatBox = document.querySelector('#chat-box');
      chatBox.innerHTML += `<div><strong>${msg.username}:</strong> ${msg.text}</div>`;
      chatBox.scrollTop = chatBox.scrollHeight;
    });
    chatBox.scrollTop = chatBox.scrollHeight;
  </script>
</body>
</html>
